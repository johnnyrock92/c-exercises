#### {% title "Odpowiedzi do niektórych zadań" %}

# Odpowiedzi do niektórych zadań

<blockquote>
 <p>
   After three days without programming, life becomes meaningless.
 </p>
 <p class="author">[The Tao of Programming 2.1]</p>
</blockquote>

## 2. Podstawowe typy danych

Zadanie 2.

    :::c
    #include <stdio.h>
    #include <ctype.h>
    int main() {
      int kod;
      printf("Podaj kod ascii: ");
      scanf("%i", &kod);
      if (isprint(kod)) {
        printf("%c\n", kod);
      } else {
        printf("znak niedrukowalny\n");
      }
      return 0;
    }

Zadanie 3.

    :::c
    #include <stdio.h>
    int main()
    {
      int ROK = 31536000;	  /* liczba sekund w roku */
      int ROK_P = 31622400;   /* liczba sekund w roku przestępnym */
      int ROK_BIEZACY = 2010;

      int w, i, leap;
      int wynik = 0;
      printf("Podaj wiek w latach: ");
      scanf("%d", &w);
      for (i = ROK_BIEZACY-1; i >= ROK_BIEZACY - w; i--) {
        leap = ((i % 4 == 0 && i % 100 != 0) || i % 400 == 0);
        if (leap == 1)
          wynik = wynik + ROK_P;
        else
          wynik = wynik + ROK;
      }
      printf("Przeżyłeś w swoim życiu około %d sekund.\n", wynik);
      return 0;
    }

Zadanie 4.

    :::c
    #include <stdio.h>
    #include <time.h>
    #include <stdlib.h>

    int main() {
      int rok, miesiac, dzien;
      struct tm *data_urodzenia;
      time_t czas_urodzenia, czas_teraz;

      // jak zainicjalizować zmienną data_urodzenia nie korzystając z localtime?
      data_urodzenia = localtime(&czas_urodzenia);
      printf("Podaj swoja date urodzeniaodzenia w formacie rrrr-mm-dd: ");
      scanf("%d-%d-%d", &rok, &miesiac, &dzien);

      data_urodzenia->tm_mday = dzien;
      data_urodzenia->tm_mon = miesiac - 1;
      data_urodzenia->tm_year = rok - 1900;

      czas_urodzenia = mktime(data_urodzenia);
      time(&czas_teraz);
      printf("Do momentu uruchomienia tego programu przezyles:\n");
      printf("\t%.0lf sekund\n", difftime(czas_teraz, czas_urodzenia));

      return 0;
    }

<!--

// struct tm *data_urodzenia = malloc(sizeof(struct tm));

-->

## Automaty skończone

Zadanie 1.

    :::c
    #include <stdio.h>
    #include <stdlib.h>

    int main()
    {
      int c, state;

      c=getchar();
      state=1;

      while (1) {
        switch (state) {

        case 1:
          switch (c) {
          case ' ': putchar(' ');
            c=getchar();
            state=2;
            break;
          case '\t': putchar(' ');
            c=getchar();
            state=3;
            break;
          case EOF:
            exit(EXIT_SUCCESS);
          default: putchar(c);
            c=getchar();
            state=1;
            break;
          }
          break;

        case 2:
          switch (c) {
          case ' ':
            c=getchar();
            state=2;
            break;
          case EOF:
            exit(EXIT_SUCCESS);
          default: putchar(c);
            c=getchar();
            state=1;
            break;
          }
          break;

        case 3:
          switch (c) {
          case '\t':
            c=getchar();
            state=3;
            break;
          case EOF:
            exit(EXIT_SUCCESS);
          default: putchar(c);
            c=getchar();
            state=1;
            break;
          }
          break;


        }
      }

      return EXIT_SUCCESS;
    }
