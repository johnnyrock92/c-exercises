<a name="LOOPS"></a>


<h3>    Pętle</h3>


<p><b>Zadanie 0.</b>
   Jakie wartości wyświetli poniższy program:
</p>
<code lang="ansic">
#include &lt;stdio.h>
int main() {
    int y, x=1, wynik = 0;
    while (x<=10) {
        y = x*x;
        printf("%d\n", y);
        wynik += y;
        ++x;
    }
    printf("wynik = %d\n", wynik);
    return 0;
}
</code>
<p>Wpisz ten program, uruchom i sprawdź czy dobrze
   odgadłeś wynik.
</p>

<p><b>Zadanie 1.</b>
   Napisz program, który wypisuje kolejne potęgi liczby 2
   nie przekraczające 2007.
</p>

<p><b>Zadanie 2.</b>
   Napisz program wyświetlający poniższą szachownicę:
</p>
<pre>
* * * * * * * *
 * * * * * * * *
* * * * * * * *
 * * * * * * * *
* * * * * * * *
 * * * * * * * *
* * * * * * * *
 * * * * * * * *
</pre>

<p><b>Zadanie 3.</b>
   Napisz program, który wczyta dwie liczby całkowite a i b
   (a&lt;b) a następnie wypisze wszystkie liczby całkowite
   pomiędzy a i b.
</p>

<p><b>Zadanie 4.</b>
   Napisz program, który wyliczy sumę liczb od 1 do liczby n
   podanej przez użytkownika. Kiedy użytkownik poda
   liczbę n<1, to program powinien wypisać stosowny komunikat
   o błędzie.
</p>

<p><b>Zadanie 5.</b>
   Napisz program, który wczyta 6 liczb całkowitych do tablicy,
   a następnie wypisze zawartość tej tablicy
   od początku i od końca.
</p>

<p><b>Zadanie 6.</b>
   Napisz program, który wczyta 7 liczb rzeczywistych do tablicy,
   a następnie wyszuka i wypisze największą i najmniejszą liczbę
   umieszczoną w tej tablicy.
</p>

<p><b>Zadanie 7.</b>
   Napisz program, który wczyta 5 liczb rzeczywistych do tablicy,
   a następnie wypisze liczbę liczb dodatnich w niej zawartych.
</p>

<p><b>Zadanie 8.</b>
   Napisz program rozmieszczający poniższe wzory oddzielnie
   jeden pod drugim. Użyj pętli <kbd>for</kbd> do generowania
   wzorów. Do wypisywania gwiazdek <b>należy</b> użyć instrukcji
   <kbd>putchar('*');</kbd> (powodującej wyświetlanie ich
   obok siebie).<br/>
   Uwaga: dwa ostatnie wzory wymagają,
   by każdy wiersz zaczynał się od odpowiedniej liczby spacji.
   <b>Zadanie dodatkowe.</b> Połącz swój kod
   składający się z czterech oddzielnych bloków (z których
   każdy rysuje jeden wzór) w jeden program wyświetlający
   cztery wzory <b>obok</b> siebie sprytnie używając
   zagnieżdżonych pętli <kbd>for</kbd>.
</p>
<pre>*       ****    ****       *
**      ***      ***      **
***     **        **     ***
****    *          *    ****
</pre>

<p><b>Zadanie 9.</b>
   Kierowcy interesują się zużyciem paliwa do swoich samochodów.
   Napisz program, który będzie pobierał z pliku liczbę przejechanych
   kilometrów, zatankowanych litrów paliwa i cenę za litr
   paliwa przy każdym tankowaniu. Dane o tankowaniu
   powinny być wpisane w jednym wierszu, a wiersze
   zawierające tylko białe znaki lub rozpoczynające
   się dwoma znakami minus <kbd>--</kbd> powinny być pomijane.
   Przykładowy plik z danymi może wyglądać tak:
</p>
<pre>-- wrzesień
300 30.4 4.25
345 25.7 4.45

-- październik
434 15.4 4.25
345 5.7  4.19
</pre>
<p>Program powinien obliczyć i wypisać
   zużycie paliwa (liczba litrów na 100 km) i koszt przejechania 100 km
   po każdym tankowaniu.
   Po przetworzeniu wszystkich informacji, program powinien
   obliczyć i wypisać zbiorczą informację dla wszystkich tankowań.
</p>
<p>Swój program zacznij od modyfikacji
   <a href="/doc/c/pliki">poniższego kodu</a>:
<code lang="ansic">
#include &lt;stdio.h>
#include &lt;stdlib.h>
int main(int argc, char *argv[])
{
  FILE *in_handle;
  char bufor[BUFSIZ];
  unsigned int ui;
  double x, y;
  in_handle = fopen(argv[1], "r");
  while (fgets(bufor, BUFSIZ, in_handle) != NULL) {
    sscanf(bufor, "%u %lf %lf", &amp;ui, &amp;x, &amp;y);
    printf("--> %d %.2f %.2f\n", ui, x, y);
  }
  fclose(in_handle);
  return EXIT_SUCCESS;
}
</code>
